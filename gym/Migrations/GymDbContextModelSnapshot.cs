// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gym.Entity;

namespace gym.Migrations
{
    [DbContext(typeof(GymDbContext))]
    partial class GymDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("gym.Entity.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("BreakTime");

                    b.Property<int>("ExerciseId");

                    b.Property<short>("NoOfSet");

                    b.Property<short>("Repition");

                    b.Property<int>("SheduleId");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("SheduleId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("gym.Entity.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("gym.Entity.Gym", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllowedMembers");

                    b.Property<short>("ContactNumber");

                    b.Property<DateTime>("JoinedDate");

                    b.Property<string>("Logo");

                    b.Property<short>("MembershipDuration");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Gym");
                });

            modelBuilder.Entity("gym.Entity.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExerciseId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("gym.Entity.Shedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("MemberId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Shedule");
                });

            modelBuilder.Entity("gym.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("GymId");

                    b.Property<short>("MobileNumber");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.HasIndex("GymId");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("gym.Entity.Admin", b =>
                {
                    b.HasBaseType("gym.Entity.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("gym.Entity.Member", b =>
                {
                    b.HasBaseType("gym.Entity.User");

                    b.Property<DateTime>("JoinedDate");

                    b.Property<string>("MembershipState");

                    b.Property<string>("MembershipType");

                    b.Property<string>("Name");

                    b.HasDiscriminator().HasValue("Member");
                });

            modelBuilder.Entity("gym.Entity.Event", b =>
                {
                    b.HasOne("gym.Entity.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("gym.Entity.Shedule", "Shedule")
                        .WithMany("Events")
                        .HasForeignKey("SheduleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("gym.Entity.Image", b =>
                {
                    b.HasOne("gym.Entity.Exercise", "Exercise")
                        .WithMany("Images")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("gym.Entity.Shedule", b =>
                {
                    b.HasOne("gym.Entity.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("gym.Entity.User", b =>
                {
                    b.HasOne("gym.Entity.Gym", "Gym")
                        .WithMany()
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
